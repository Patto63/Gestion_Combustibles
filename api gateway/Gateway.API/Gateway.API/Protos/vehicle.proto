syntax = "proto3";

option csharp_namespace = "VehicleService";

package vehicle;

import "google/protobuf/empty.proto";

message VehiculoDto {
  int32 id = 1; 
  string placa = 2;
  string marca = 3;
  string modelo = 4;
  int32 anio = 5;
  int32 tipoMaquinariaId = 6;
  bool estadoOperativo = 7;
  double capacidadTanqueGalones = 8;
  double combustibleActualGalones = 9;
}

message VehiculoRequest {
  string placa = 1;
  string marca = 2;
  string modelo = 3;
  int32 anio = 4;
  int32 tipoMaquinariaId = 5;
  double capacidadTanqueGalones = 6;
  double combustibleActualGalones = 7;
}

message VehiculoIdRequest {
  int32 id = 1; 
}

message ListaVehiculos {
  repeated VehiculoDto vehiculos = 1;
}

message EditarVehiculoRequest {
  int32 id = 1;
  optional string placa = 2;
  optional string marca = 3;
  optional string modelo = 4;
  optional int32 anio = 5;
  optional int32 tipoMaquinariaId = 6;
  optional bool estadoOperativo = 7;
  optional double capacidadTanqueGalones = 8;
  optional double combustibleActualGalones = 9;
}

message FiltroVehiculoRequest {
  optional string placa = 1;
  optional string marca = 2;
  optional string modelo = 3;
  optional int32 anio = 4;
  optional int32 tipoMaquinariaId = 5;
  optional bool estadoOperativo = 6;
  optional double capacidadMinima = 7;
  optional double combustibleMinimo = 8;
}




service VehiculoService {
  rpc CrearVehiculo (VehiculoRequest) returns (VehiculoDto);
  rpc ObtenerVehiculoPorId (VehiculoIdRequest) returns (VehiculoDto);
  rpc ListarVehiculos (google.protobuf.Empty) returns (ListaVehiculos);
  rpc EliminarVehiculo (VehiculoIdRequest) returns (google.protobuf.Empty);
  rpc EditarVehiculo (EditarVehiculoRequest) returns (VehiculoDto);
  rpc FiltrarVehiculos (FiltroVehiculoRequest) returns (ListaVehiculos);

}
